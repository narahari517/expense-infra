pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Pick any action')
    }
    stages {
        stage('init and plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                        cd 40-eks
                        terraform init --reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }
        stage('apply or destroy') {
            input {
                message "Should we continue ${params.ACTION} ?"
                ok "Yes, we should."
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                        cd 40-eks
                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve tfplan
                        elif [ ${params.ACTION} == 'destroy' ]
                        then
                            terraform destroy -auto-approve
                        fi
                    """
                }
            }
        }
        
    }

    post {
        always {
            echo "this section always runs"
            deleteDir()
        }
        success {
            echo "this section runs when pipeline is successful"
        }
        failure {
            echo "this section runs when pipeline is failed"
        }
    }
}